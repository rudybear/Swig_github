//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.7
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class IGameMod : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  public IGameMod(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  public static global::System.Runtime.InteropServices.HandleRef getCPtr(IGameMod obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~IGameMod() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          Engine2PINVOKE.delete_IGameMod(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public virtual SWIGTYPE_p_HRESULT ImportVars(GameModImport pImport) {
    SWIGTYPE_p_HRESULT ret = new SWIGTYPE_p_HRESULT(Engine2PINVOKE.IGameMod_ImportVars(swigCPtr, GameModImport.getCPtr(pImport)), true);
    if (Engine2PINVOKE.SWIGPendingException.Pending) throw Engine2PINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual SWIGTYPE_p_HRESULT Init() {
    SWIGTYPE_p_HRESULT ret = new SWIGTYPE_p_HRESULT(Engine2PINVOKE.IGameMod_Init(swigCPtr), true);
    return ret;
  }

  public virtual SWIGTYPE_p_HRESULT Restore() {
    SWIGTYPE_p_HRESULT ret = new SWIGTYPE_p_HRESULT(Engine2PINVOKE.IGameMod_Restore(swigCPtr), true);
    return ret;
  }

  public virtual SWIGTYPE_p_HRESULT Move() {
    SWIGTYPE_p_HRESULT ret = new SWIGTYPE_p_HRESULT(Engine2PINVOKE.IGameMod_Move(swigCPtr), true);
    return ret;
  }

  public virtual void KillGame() {
    Engine2PINVOKE.IGameMod_KillGame(swigCPtr);
  }

  public virtual SWIGTYPE_p_HRESULT GetCameraPosRot(CVec3 Pos, CMatrix44 Rot) {
    SWIGTYPE_p_HRESULT ret = new SWIGTYPE_p_HRESULT(Engine2PINVOKE.IGameMod_GetCameraPosRot(swigCPtr, CVec3.getCPtr(Pos), CMatrix44.getCPtr(Rot)), true);
    if (Engine2PINVOKE.SWIGPendingException.Pending) throw Engine2PINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual SCoreStatistics GetStatistics() {
    global::System.IntPtr cPtr = Engine2PINVOKE.IGameMod_GetStatistics(swigCPtr);
    SCoreStatistics ret = (cPtr == global::System.IntPtr.Zero) ? null : new SCoreStatistics(cPtr, false);
    return ret;
  }

  public virtual SWIGTYPE_p_ILevelLogData GetLevelLog() {
    global::System.IntPtr cPtr = Engine2PINVOKE.IGameMod_GetLevelLog(swigCPtr);
    SWIGTYPE_p_ILevelLogData ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_ILevelLogData(cPtr, false);
    return ret;
  }

  public virtual void ProcessMessage(SWIGTYPE_p_UINT uMsg, SWIGTYPE_p_WPARAM wParam, SWIGTYPE_p_LPARAM lParam) {
    Engine2PINVOKE.IGameMod_ProcessMessage(swigCPtr, SWIGTYPE_p_UINT.getCPtr(uMsg), SWIGTYPE_p_WPARAM.getCPtr(wParam), SWIGTYPE_p_LPARAM.getCPtr(lParam));
    if (Engine2PINVOKE.SWIGPendingException.Pending) throw Engine2PINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual SWIGTYPE_p_HRESULT PostConstruct() {
    SWIGTYPE_p_HRESULT ret = new SWIGTYPE_p_HRESULT(Engine2PINVOKE.IGameMod_PostConstruct(swigCPtr), true);
    return ret;
  }

  public virtual int GetMouseInverted() {
    int ret = Engine2PINVOKE.IGameMod_GetMouseInverted(swigCPtr);
    return ret;
  }

  public virtual void UpdateLoadingScreen() {
    Engine2PINVOKE.IGameMod_UpdateLoadingScreen(swigCPtr);
  }

  public virtual void GiveAll() {
    Engine2PINVOKE.IGameMod_GiveAll(swigCPtr);
  }

  public virtual void NoClip() {
    Engine2PINVOKE.IGameMod_NoClip(swigCPtr);
  }

}
