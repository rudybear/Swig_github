//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.7
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class Engine2String : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  public Engine2String(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  public static global::System.Runtime.InteropServices.HandleRef getCPtr(Engine2String obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~Engine2String() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          Engine2PINVOKE.delete_Engine2String(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public Engine2String() : this(Engine2PINVOKE.new_Engine2String__SWIG_0(), true) {
  }

  public Engine2String(Engine2String str) : this(Engine2PINVOKE.new_Engine2String__SWIG_1(Engine2String.getCPtr(str)), true) {
    if (Engine2PINVOKE.SWIGPendingException.Pending) throw Engine2PINVOKE.SWIGPendingException.Retrieve();
  }

  public Engine2String(Engine2String str, uint nOff, uint nCount) : this(Engine2PINVOKE.new_Engine2String__SWIG_2(Engine2String.getCPtr(str), nOff, nCount), true) {
    if (Engine2PINVOKE.SWIGPendingException.Pending) throw Engine2PINVOKE.SWIGPendingException.Retrieve();
  }

  public Engine2String(char ch, uint nRepeat) : this(Engine2PINVOKE.new_Engine2String__SWIG_3(ch, nRepeat), true) {
  }

  public Engine2String(char ch) : this(Engine2PINVOKE.new_Engine2String__SWIG_4(ch), true) {
  }

  public Engine2String(string str) : this(Engine2PINVOKE.new_Engine2String__SWIG_5(str), true) {
  }

  public Engine2String(string str, uint nLength) : this(Engine2PINVOKE.new_Engine2String__SWIG_6(str, nLength), true) {
  }

  public Engine2String(string _First, string _Last) : this(Engine2PINVOKE.new_Engine2String__SWIG_7(_First, _Last), true) {
  }

  public uint length() {
    uint ret = Engine2PINVOKE.Engine2String_length(swigCPtr);
    return ret;
  }

  public uint size() {
    uint ret = Engine2PINVOKE.Engine2String_size(swigCPtr);
    return ret;
  }

  public bool empty() {
    bool ret = Engine2PINVOKE.Engine2String_empty(swigCPtr);
    return ret;
  }

  public void clear() {
    Engine2PINVOKE.Engine2String_clear(swigCPtr);
  }

  public uint capacity() {
    uint ret = Engine2PINVOKE.Engine2String_capacity(swigCPtr);
    return ret;
  }

  public void reserve(uint nCount) {
    Engine2PINVOKE.Engine2String_reserve__SWIG_0(swigCPtr, nCount);
  }

  public void reserve() {
    Engine2PINVOKE.Engine2String_reserve__SWIG_1(swigCPtr);
  }

  public Engine2String append(string _Ptr) {
    Engine2String ret = new Engine2String(Engine2PINVOKE.Engine2String_append__SWIG_0(swigCPtr, _Ptr), false);
    return ret;
  }

  public Engine2String append(string _Ptr, uint nCount) {
    Engine2String ret = new Engine2String(Engine2PINVOKE.Engine2String_append__SWIG_1(swigCPtr, _Ptr, nCount), false);
    return ret;
  }

  public Engine2String append(Engine2String _Str, uint nOff, uint nCount) {
    Engine2String ret = new Engine2String(Engine2PINVOKE.Engine2String_append__SWIG_2(swigCPtr, Engine2String.getCPtr(_Str), nOff, nCount), false);
    if (Engine2PINVOKE.SWIGPendingException.Pending) throw Engine2PINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public Engine2String append(Engine2String _Str) {
    Engine2String ret = new Engine2String(Engine2PINVOKE.Engine2String_append__SWIG_3(swigCPtr, Engine2String.getCPtr(_Str)), false);
    if (Engine2PINVOKE.SWIGPendingException.Pending) throw Engine2PINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public Engine2String append(uint nCount, char _Ch) {
    Engine2String ret = new Engine2String(Engine2PINVOKE.Engine2String_append__SWIG_4(swigCPtr, nCount, _Ch), false);
    return ret;
  }

  public Engine2String append(string _First, string _Last) {
    Engine2String ret = new Engine2String(Engine2PINVOKE.Engine2String_append__SWIG_5(swigCPtr, _First, _Last), false);
    return ret;
  }

  public Engine2String assign(string _Ptr) {
    Engine2String ret = new Engine2String(Engine2PINVOKE.Engine2String_assign__SWIG_0(swigCPtr, _Ptr), false);
    return ret;
  }

  public Engine2String assign(string _Ptr, uint nCount) {
    Engine2String ret = new Engine2String(Engine2PINVOKE.Engine2String_assign__SWIG_1(swigCPtr, _Ptr, nCount), false);
    return ret;
  }

  public Engine2String assign(Engine2String _Str, uint off, uint nCount) {
    Engine2String ret = new Engine2String(Engine2PINVOKE.Engine2String_assign__SWIG_2(swigCPtr, Engine2String.getCPtr(_Str), off, nCount), false);
    if (Engine2PINVOKE.SWIGPendingException.Pending) throw Engine2PINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public Engine2String assign(Engine2String _Str) {
    Engine2String ret = new Engine2String(Engine2PINVOKE.Engine2String_assign__SWIG_3(swigCPtr, Engine2String.getCPtr(_Str)), false);
    if (Engine2PINVOKE.SWIGPendingException.Pending) throw Engine2PINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public Engine2String assign(uint nCount, char _Ch) {
    Engine2String ret = new Engine2String(Engine2PINVOKE.Engine2String_assign__SWIG_4(swigCPtr, nCount, _Ch), false);
    return ret;
  }

  public Engine2String assign(string _First, string _Last) {
    Engine2String ret = new Engine2String(Engine2PINVOKE.Engine2String_assign__SWIG_5(swigCPtr, _First, _Last), false);
    return ret;
  }

  public char at(uint index) {
    char ret = Engine2PINVOKE.Engine2String_at(swigCPtr, index);
    return ret;
  }

  public string begin() {
    string ret = Engine2PINVOKE.Engine2String_begin__SWIG_0(swigCPtr);
    return ret;
  }

  public string end() {
    string ret = Engine2PINVOKE.Engine2String_end__SWIG_0(swigCPtr);
    return ret;
  }

  public string c_str() {
    string ret = Engine2PINVOKE.Engine2String_c_str(swigCPtr);
    return ret;
  }

  public string data() {
    string ret = Engine2PINVOKE.Engine2String_data(swigCPtr);
    return ret;
  }

  public int compare(Engine2String _Str) {
    int ret = Engine2PINVOKE.Engine2String_compare__SWIG_0(swigCPtr, Engine2String.getCPtr(_Str));
    if (Engine2PINVOKE.SWIGPendingException.Pending) throw Engine2PINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int compare(uint _Pos1, uint _Num1, Engine2String _Str) {
    int ret = Engine2PINVOKE.Engine2String_compare__SWIG_1(swigCPtr, _Pos1, _Num1, Engine2String.getCPtr(_Str));
    if (Engine2PINVOKE.SWIGPendingException.Pending) throw Engine2PINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int compare(uint _Pos1, uint _Num1, Engine2String _Str, uint nOff, uint nCount) {
    int ret = Engine2PINVOKE.Engine2String_compare__SWIG_2(swigCPtr, _Pos1, _Num1, Engine2String.getCPtr(_Str), nOff, nCount);
    if (Engine2PINVOKE.SWIGPendingException.Pending) throw Engine2PINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int compare(string _Ptr) {
    int ret = Engine2PINVOKE.Engine2String_compare__SWIG_3(swigCPtr, _Ptr);
    return ret;
  }

  public int compare(uint _Pos1, uint _Num1, string _Ptr) {
    int ret = Engine2PINVOKE.Engine2String_compare__SWIG_4(swigCPtr, _Pos1, _Num1, _Ptr);
    return ret;
  }

  public int compareWithPos(uint _Pos1, uint _Num1, string _Ptr, uint _Num2) {
    int ret = Engine2PINVOKE.Engine2String_compareWithPos__SWIG_0(swigCPtr, _Pos1, _Num1, _Ptr, _Num2);
    return ret;
  }

  public int compareWithPos(uint _Pos1, uint _Num1, string _Ptr) {
    int ret = Engine2PINVOKE.Engine2String_compareWithPos__SWIG_1(swigCPtr, _Pos1, _Num1, _Ptr);
    return ret;
  }

  public int compareNoCase(Engine2String _Str) {
    int ret = Engine2PINVOKE.Engine2String_compareNoCase__SWIG_0(swigCPtr, Engine2String.getCPtr(_Str));
    if (Engine2PINVOKE.SWIGPendingException.Pending) throw Engine2PINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int compareNoCase(uint _Pos1, uint _Num1, Engine2String _Str) {
    int ret = Engine2PINVOKE.Engine2String_compareNoCase__SWIG_1(swigCPtr, _Pos1, _Num1, Engine2String.getCPtr(_Str));
    if (Engine2PINVOKE.SWIGPendingException.Pending) throw Engine2PINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int compareNoCase(uint _Pos1, uint _Num1, Engine2String _Str, uint nOff, uint nCount) {
    int ret = Engine2PINVOKE.Engine2String_compareNoCase__SWIG_2(swigCPtr, _Pos1, _Num1, Engine2String.getCPtr(_Str), nOff, nCount);
    if (Engine2PINVOKE.SWIGPendingException.Pending) throw Engine2PINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int compareNoCase(string _Ptr) {
    int ret = Engine2PINVOKE.Engine2String_compareNoCase__SWIG_3(swigCPtr, _Ptr);
    return ret;
  }

  public int compareNoCase(uint _Pos1, uint _Num1, string _Ptr) {
    int ret = Engine2PINVOKE.Engine2String_compareNoCase__SWIG_4(swigCPtr, _Pos1, _Num1, _Ptr);
    return ret;
  }

  public int compareNoCaseWithPos(uint _Pos1, uint _Num1, string _Ptr, uint _Num2) {
    int ret = Engine2PINVOKE.Engine2String_compareNoCaseWithPos__SWIG_0(swigCPtr, _Pos1, _Num1, _Ptr, _Num2);
    return ret;
  }

  public int compareNoCaseWithPos(uint _Pos1, uint _Num1, string _Ptr) {
    int ret = Engine2PINVOKE.Engine2String_compareNoCaseWithPos__SWIG_1(swigCPtr, _Pos1, _Num1, _Ptr);
    return ret;
  }

  public uint copy(string _Ptr, uint nCount, uint nOff) {
    uint ret = Engine2PINVOKE.Engine2String_copy__SWIG_0(swigCPtr, _Ptr, nCount, nOff);
    return ret;
  }

  public uint copy(string _Ptr, uint nCount) {
    uint ret = Engine2PINVOKE.Engine2String_copy__SWIG_1(swigCPtr, _Ptr, nCount);
    return ret;
  }

  public void push_back(char _Ch) {
    Engine2PINVOKE.Engine2String_push_back(swigCPtr, _Ch);
  }

  public void resize(uint nCount, char _Ch) {
    Engine2PINVOKE.Engine2String_resize__SWIG_0(swigCPtr, nCount, _Ch);
  }

  public void resize(uint nCount) {
    Engine2PINVOKE.Engine2String_resize__SWIG_1(swigCPtr, nCount);
  }

  public Engine2String substr(uint pos, uint count) {
    Engine2String ret = new Engine2String(Engine2PINVOKE.Engine2String_substr__SWIG_0(swigCPtr, pos, count), true);
    return ret;
  }

  public Engine2String substr(uint pos) {
    Engine2String ret = new Engine2String(Engine2PINVOKE.Engine2String_substr__SWIG_1(swigCPtr, pos), true);
    return ret;
  }

  public Engine2String replace(char chOld, char chNew) {
    Engine2String ret = new Engine2String(Engine2PINVOKE.Engine2String_replace__SWIG_0(swigCPtr, chOld, chNew), false);
    return ret;
  }

  public Engine2String replace(string strOld, string strNew) {
    Engine2String ret = new Engine2String(Engine2PINVOKE.Engine2String_replace__SWIG_1(swigCPtr, strOld, strNew), false);
    return ret;
  }

  public Engine2String replace(uint pos, uint count, string strNew) {
    Engine2String ret = new Engine2String(Engine2PINVOKE.Engine2String_replace__SWIG_2(swigCPtr, pos, count, strNew), false);
    return ret;
  }

  public Engine2String replace(uint pos, uint count, string strNew, uint count2) {
    Engine2String ret = new Engine2String(Engine2PINVOKE.Engine2String_replace__SWIG_3(swigCPtr, pos, count, strNew, count2), false);
    return ret;
  }

  public Engine2String replace(uint pos, uint count, uint nNumChars, char chNew) {
    Engine2String ret = new Engine2String(Engine2PINVOKE.Engine2String_replace__SWIG_4(swigCPtr, pos, count, nNumChars, chNew), false);
    return ret;
  }

  public Engine2String insert(uint nIndex, char ch) {
    Engine2String ret = new Engine2String(Engine2PINVOKE.Engine2String_insert__SWIG_0(swigCPtr, nIndex, ch), false);
    return ret;
  }

  public Engine2String insert(uint nIndex, uint nCount, char ch) {
    Engine2String ret = new Engine2String(Engine2PINVOKE.Engine2String_insert__SWIG_1(swigCPtr, nIndex, nCount, ch), false);
    return ret;
  }

  public Engine2String insert(uint nIndex, string pstr) {
    Engine2String ret = new Engine2String(Engine2PINVOKE.Engine2String_insert__SWIG_2(swigCPtr, nIndex, pstr), false);
    return ret;
  }

  public Engine2String insert(uint nIndex, string pstr, uint nCount) {
    Engine2String ret = new Engine2String(Engine2PINVOKE.Engine2String_insert__SWIG_3(swigCPtr, nIndex, pstr, nCount), false);
    return ret;
  }

  public Engine2String erase(uint nIndex, uint count) {
    Engine2String ret = new Engine2String(Engine2PINVOKE.Engine2String_erase__SWIG_0(swigCPtr, nIndex, count), false);
    return ret;
  }

  public Engine2String erase(uint nIndex) {
    Engine2String ret = new Engine2String(Engine2PINVOKE.Engine2String_erase__SWIG_1(swigCPtr, nIndex), false);
    return ret;
  }

  public uint find(char ch, uint pos) {
    uint ret = Engine2PINVOKE.Engine2String_find__SWIG_0(swigCPtr, ch, pos);
    return ret;
  }

  public uint find(char ch) {
    uint ret = Engine2PINVOKE.Engine2String_find__SWIG_1(swigCPtr, ch);
    return ret;
  }

  public uint find(string subs, uint pos) {
    uint ret = Engine2PINVOKE.Engine2String_find__SWIG_2(swigCPtr, subs, pos);
    return ret;
  }

  public uint find(string subs) {
    uint ret = Engine2PINVOKE.Engine2String_find__SWIG_3(swigCPtr, subs);
    return ret;
  }

  public uint rfind(char ch, uint pos) {
    uint ret = Engine2PINVOKE.Engine2String_rfind__SWIG_0(swigCPtr, ch, pos);
    return ret;
  }

  public uint rfind(char ch) {
    uint ret = Engine2PINVOKE.Engine2String_rfind__SWIG_1(swigCPtr, ch);
    return ret;
  }

  public uint find_last_of(char _Ch, uint nOff) {
    uint ret = Engine2PINVOKE.Engine2String_find_last_of__SWIG_0(swigCPtr, _Ch, nOff);
    return ret;
  }

  public uint find_last_of(char _Ch) {
    uint ret = Engine2PINVOKE.Engine2String_find_last_of__SWIG_1(swigCPtr, _Ch);
    return ret;
  }

  public uint find_first_of(char _Ch, uint nOff) {
    uint ret = Engine2PINVOKE.Engine2String_find_first_of__SWIG_0(swigCPtr, _Ch, nOff);
    return ret;
  }

  public uint find_first_of(char _Ch) {
    uint ret = Engine2PINVOKE.Engine2String_find_first_of__SWIG_1(swigCPtr, _Ch);
    return ret;
  }

  public uint find_first_of(string charSet, uint nOff) {
    uint ret = Engine2PINVOKE.Engine2String_find_first_of__SWIG_2(swigCPtr, charSet, nOff);
    return ret;
  }

  public uint find_first_of(string charSet) {
    uint ret = Engine2PINVOKE.Engine2String_find_first_of__SWIG_3(swigCPtr, charSet);
    return ret;
  }

  public uint find_first_of(Engine2String _Str, uint _Off) {
    uint ret = Engine2PINVOKE.Engine2String_find_first_of__SWIG_4(swigCPtr, Engine2String.getCPtr(_Str), _Off);
    if (Engine2PINVOKE.SWIGPendingException.Pending) throw Engine2PINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public uint find_first_of(Engine2String _Str) {
    uint ret = Engine2PINVOKE.Engine2String_find_first_of__SWIG_5(swigCPtr, Engine2String.getCPtr(_Str));
    if (Engine2PINVOKE.SWIGPendingException.Pending) throw Engine2PINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public uint find_first_not_of(char _Ch, uint _Off) {
    uint ret = Engine2PINVOKE.Engine2String_find_first_not_of__SWIG_0(swigCPtr, _Ch, _Off);
    return ret;
  }

  public uint find_first_not_of(char _Ch) {
    uint ret = Engine2PINVOKE.Engine2String_find_first_not_of__SWIG_1(swigCPtr, _Ch);
    return ret;
  }

  public uint find_first_not_of(string _Ptr, uint _Off) {
    uint ret = Engine2PINVOKE.Engine2String_find_first_not_of__SWIG_2(swigCPtr, _Ptr, _Off);
    return ret;
  }

  public uint find_first_not_of(string _Ptr) {
    uint ret = Engine2PINVOKE.Engine2String_find_first_not_of__SWIG_3(swigCPtr, _Ptr);
    return ret;
  }

  public uint find_first_not_of(string _Ptr, uint _Off, uint _Count) {
    uint ret = Engine2PINVOKE.Engine2String_find_first_not_of__SWIG_4(swigCPtr, _Ptr, _Off, _Count);
    return ret;
  }

  public uint find_first_not_of(Engine2String _Str, uint _Off) {
    uint ret = Engine2PINVOKE.Engine2String_find_first_not_of__SWIG_5(swigCPtr, Engine2String.getCPtr(_Str), _Off);
    if (Engine2PINVOKE.SWIGPendingException.Pending) throw Engine2PINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public uint find_first_not_of(Engine2String _Str) {
    uint ret = Engine2PINVOKE.Engine2String_find_first_not_of__SWIG_6(swigCPtr, Engine2String.getCPtr(_Str));
    if (Engine2PINVOKE.SWIGPendingException.Pending) throw Engine2PINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void swap(Engine2String _Str) {
    Engine2PINVOKE.Engine2String_swap(swigCPtr, Engine2String.getCPtr(_Str));
    if (Engine2PINVOKE.SWIGPendingException.Pending) throw Engine2PINVOKE.SWIGPendingException.Retrieve();
  }

  public Engine2String FixPathToUnix() {
    Engine2String ret = new Engine2String(Engine2PINVOKE.Engine2String_FixPathToUnix(swigCPtr), false);
    return ret;
  }

  public Engine2String Format(string format) {
    Engine2String ret = new Engine2String(Engine2PINVOKE.Engine2String_Format(swigCPtr, format), false);
    return ret;
  }

  public Engine2String MakeLower() {
    Engine2String ret = new Engine2String(Engine2PINVOKE.Engine2String_MakeLower(swigCPtr), false);
    return ret;
  }

  public Engine2String MakeLowerLocale() {
    Engine2String ret = new Engine2String(Engine2PINVOKE.Engine2String_MakeLowerLocale(swigCPtr), false);
    return ret;
  }

  public Engine2String MakeUpper() {
    Engine2String ret = new Engine2String(Engine2PINVOKE.Engine2String_MakeUpper(swigCPtr), false);
    return ret;
  }

  public static uint _strlen(string str) {
    uint ret = Engine2PINVOKE.Engine2String__strlen(str);
    return ret;
  }

  public static string _strchr(string str, char c) {
    string ret = Engine2PINVOKE.Engine2String__strchr(str, c);
    return ret;
  }

  public static string _strstr(string str, string strSearch) {
    string ret = Engine2PINVOKE.Engine2String__strstr(str, strSearch);
    return ret;
  }

  public static bool _IsValidString(string str) {
    bool ret = Engine2PINVOKE.Engine2String__IsValidString(str);
    return ret;
  }

  public static int _usedMemory(int size) {
    int ret = Engine2PINVOKE.Engine2String__usedMemory(size);
    return ret;
  }

  public static readonly uint npos = Engine2PINVOKE.Engine2String_npos_get();
}
