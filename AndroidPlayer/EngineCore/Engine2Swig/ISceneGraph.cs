//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.7
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class ISceneGraph : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  public ISceneGraph(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  public static global::System.Runtime.InteropServices.HandleRef getCPtr(ISceneGraph obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~ISceneGraph() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          Engine2PINVOKE.delete_ISceneGraph(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public virtual IVisArea GetVisArea(int num) {
    global::System.IntPtr cPtr = Engine2PINVOKE.ISceneGraph_GetVisArea(swigCPtr, num);
    IVisArea ret = (cPtr == global::System.IntPtr.Zero) ? null : new IVisArea(cPtr, false);
    return ret;
  }

  public virtual uint AddVisArea(IVisArea arg0) {
    uint ret = Engine2PINVOKE.ISceneGraph_AddVisArea(swigCPtr, IVisArea.getCPtr(arg0));
    return ret;
  }

  public virtual uint AddSimpleVisArea() {
    uint ret = Engine2PINVOKE.ISceneGraph_AddSimpleVisArea(swigCPtr);
    return ret;
  }

  public virtual uint GetMainVisAreaNum() {
    uint ret = Engine2PINVOKE.ISceneGraph_GetMainVisAreaNum(swigCPtr);
    return ret;
  }

  public virtual void SetVisAreaAsMain(uint num) {
    Engine2PINVOKE.ISceneGraph_SetVisAreaAsMain(swigCPtr, num);
  }

  public virtual void SetNewFrame() {
    Engine2PINVOKE.ISceneGraph_SetNewFrame(swigCPtr);
  }

  public virtual SWIGTYPE_p_RenderStatistics DrawPass(SWIGTYPE_p_eRenderType type, bool bImmediate) {
    SWIGTYPE_p_RenderStatistics ret = new SWIGTYPE_p_RenderStatistics(Engine2PINVOKE.ISceneGraph_DrawPass(swigCPtr, SWIGTYPE_p_eRenderType.getCPtr(type), bImmediate), true);
    if (Engine2PINVOKE.SWIGPendingException.Pending) throw Engine2PINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}
