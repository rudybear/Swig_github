//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.7
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class AnimationParam : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  public AnimationParam(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  public static global::System.Runtime.InteropServices.HandleRef getCPtr(AnimationParam obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~AnimationParam() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          Engine2PINVOKE.delete_AnimationParam(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public AnimationParam() : this(Engine2PINVOKE.new_AnimationParam(), true) {
  }

  public float m_fSpeed {
    set {
      Engine2PINVOKE.AnimationParam_m_fSpeed_set(swigCPtr, value);
    } 
    get {
      float ret = Engine2PINVOKE.AnimationParam_m_fSpeed_get(swigCPtr);
      return ret;
    } 
  }

  public float m_fWeight {
    set {
      Engine2PINVOKE.AnimationParam_m_fWeight_set(swigCPtr, value);
    } 
    get {
      float ret = Engine2PINVOKE.AnimationParam_m_fWeight_get(swigCPtr);
      return ret;
    } 
  }

  public float m_fCurrentTime {
    set {
      Engine2PINVOKE.AnimationParam_m_fCurrentTime_set(swigCPtr, value);
    } 
    get {
      float ret = Engine2PINVOKE.AnimationParam_m_fCurrentTime_get(swigCPtr);
      return ret;
    } 
  }

  public int m_iFirstAffectedBone {
    set {
      Engine2PINVOKE.AnimationParam_m_iFirstAffectedBone_set(swigCPtr, value);
    } 
    get {
      int ret = Engine2PINVOKE.AnimationParam_m_iFirstAffectedBone_get(swigCPtr);
      return ret;
    } 
  }

  public int m_iOnlyAffectedBone {
    set {
      Engine2PINVOKE.AnimationParam_m_iOnlyAffectedBone_set(swigCPtr, value);
    } 
    get {
      int ret = Engine2PINVOKE.AnimationParam_m_iOnlyAffectedBone_get(swigCPtr);
      return ret;
    } 
  }

  public uint m_nLayer {
    set {
      Engine2PINVOKE.AnimationParam_m_nLayer_set(swigCPtr, value);
    } 
    get {
      uint ret = Engine2PINVOKE.AnimationParam_m_nLayer_get(swigCPtr);
      return ret;
    } 
  }

  public bool m_bGameUpdate {
    set {
      Engine2PINVOKE.AnimationParam_m_bGameUpdate_set(swigCPtr, value);
    } 
    get {
      bool ret = Engine2PINVOKE.AnimationParam_m_bGameUpdate_get(swigCPtr);
      return ret;
    } 
  }

  public bool m_bLooped {
    set {
      Engine2PINVOKE.AnimationParam_m_bLooped_set(swigCPtr, value);
    } 
    get {
      bool ret = Engine2PINVOKE.AnimationParam_m_bLooped_get(swigCPtr);
      return ret;
    } 
  }

  public bool m_bAdditive {
    set {
      Engine2PINVOKE.AnimationParam_m_bAdditive_set(swigCPtr, value);
    } 
    get {
      bool ret = Engine2PINVOKE.AnimationParam_m_bAdditive_get(swigCPtr);
      return ret;
    } 
  }

  public bool m_bReverse {
    set {
      Engine2PINVOKE.AnimationParam_m_bReverse_set(swigCPtr, value);
    } 
    get {
      bool ret = Engine2PINVOKE.AnimationParam_m_bReverse_get(swigCPtr);
      return ret;
    } 
  }

  public bool m_bStopAtTheEnd {
    set {
      Engine2PINVOKE.AnimationParam_m_bStopAtTheEnd_set(swigCPtr, value);
    } 
    get {
      bool ret = Engine2PINVOKE.AnimationParam_m_bStopAtTheEnd_get(swigCPtr);
      return ret;
    } 
  }

  public bool m_bAdditive2 {
    set {
      Engine2PINVOKE.AnimationParam_m_bAdditive2_set(swigCPtr, value);
    } 
    get {
      bool ret = Engine2PINVOKE.AnimationParam_m_bAdditive2_get(swigCPtr);
      return ret;
    } 
  }

  public bool m_bDropToIdle {
    set {
      Engine2PINVOKE.AnimationParam_m_bDropToIdle_set(swigCPtr, value);
    } 
    get {
      bool ret = Engine2PINVOKE.AnimationParam_m_bDropToIdle_get(swigCPtr);
      return ret;
    } 
  }

}
