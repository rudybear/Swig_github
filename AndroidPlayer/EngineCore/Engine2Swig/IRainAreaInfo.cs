//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.7
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class IRainAreaInfo : IMeshInfo {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  public IRainAreaInfo(global::System.IntPtr cPtr, bool cMemoryOwn) : base(Engine2PINVOKE.IRainAreaInfo_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  public static global::System.Runtime.InteropServices.HandleRef getCPtr(IRainAreaInfo obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~IRainAreaInfo() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          Engine2PINVOKE.delete_IRainAreaInfo(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public virtual void SetDropScale(float xscale, float yscale) {
    Engine2PINVOKE.IRainAreaInfo_SetDropScale(swigCPtr, xscale, yscale);
  }

  public virtual void GetDropScale(SWIGTYPE_p_float xscale, SWIGTYPE_p_float yscale) {
    Engine2PINVOKE.IRainAreaInfo_GetDropScale(swigCPtr, SWIGTYPE_p_float.getCPtr(xscale), SWIGTYPE_p_float.getCPtr(yscale));
    if (Engine2PINVOKE.SWIGPendingException.Pending) throw Engine2PINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual void SetDropSpeed(float speedMin, float speedMax) {
    Engine2PINVOKE.IRainAreaInfo_SetDropSpeed(swigCPtr, speedMin, speedMax);
  }

  public virtual void GetDropSpeed(SWIGTYPE_p_float speedMin, SWIGTYPE_p_float speedMax) {
    Engine2PINVOKE.IRainAreaInfo_GetDropSpeed(swigCPtr, SWIGTYPE_p_float.getCPtr(speedMin), SWIGTYPE_p_float.getCPtr(speedMax));
    if (Engine2PINVOKE.SWIGPendingException.Pending) throw Engine2PINVOKE.SWIGPendingException.Retrieve();
  }

}
