//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.7
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class IConfigFile : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal IConfigFile(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(IConfigFile obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~IConfigFile() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          Engine2PINVOKE.delete_IConfigFile(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public virtual string GetGameType() {
    string ret = Engine2PINVOKE.IConfigFile_GetGameType(swigCPtr);
    return ret;
  }

  public virtual string GetPath(string arg0) {
    string ret = Engine2PINVOKE.IConfigFile_GetPath(swigCPtr, arg0);
    return ret;
  }

  public virtual uint GetTexturesPathCount() {
    uint ret = Engine2PINVOKE.IConfigFile_GetTexturesPathCount(swigCPtr);
    return ret;
  }

  public virtual string GetTexturesPath(uint arg0) {
    string ret = Engine2PINVOKE.IConfigFile_GetTexturesPath(swigCPtr, arg0);
    return ret;
  }

  public virtual uint GetModelsPathCount() {
    uint ret = Engine2PINVOKE.IConfigFile_GetModelsPathCount(swigCPtr);
    return ret;
  }

  public virtual string GetModelsPath(uint arg0) {
    string ret = Engine2PINVOKE.IConfigFile_GetModelsPath(swigCPtr, arg0);
    return ret;
  }

  public virtual string GetTerrainPath() {
    string ret = Engine2PINVOKE.IConfigFile_GetTerrainPath(swigCPtr);
    return ret;
  }

  public virtual uint GetEffectsPathCount() {
    uint ret = Engine2PINVOKE.IConfigFile_GetEffectsPathCount(swigCPtr);
    return ret;
  }

  public virtual string GetEffectsPath(uint arg0) {
    string ret = Engine2PINVOKE.IConfigFile_GetEffectsPath(swigCPtr, arg0);
    return ret;
  }

  public virtual string GetEffectsWritePath() {
    string ret = Engine2PINVOKE.IConfigFile_GetEffectsWritePath(swigCPtr);
    return ret;
  }

  public virtual uint GetScriptsPathCount() {
    uint ret = Engine2PINVOKE.IConfigFile_GetScriptsPathCount(swigCPtr);
    return ret;
  }

  public virtual string GetScriptsPath(uint arg0) {
    string ret = Engine2PINVOKE.IConfigFile_GetScriptsPath(swigCPtr, arg0);
    return ret;
  }

  public virtual string GetSoundPath() {
    string ret = Engine2PINVOKE.IConfigFile_GetSoundPath(swigCPtr);
    return ret;
  }

  public virtual string GetDataFolder() {
    string ret = Engine2PINVOKE.IConfigFile_GetDataFolder(swigCPtr);
    return ret;
  }

  public virtual string GetGameDialog() {
    string ret = Engine2PINVOKE.IConfigFile_GetGameDialog(swigCPtr);
    return ret;
  }

  public virtual string GetAnimationFolder() {
    string ret = Engine2PINVOKE.IConfigFile_GetAnimationFolder(swigCPtr);
    return ret;
  }

  public virtual uint GetParticlesPathCount() {
    uint ret = Engine2PINVOKE.IConfigFile_GetParticlesPathCount(swigCPtr);
    return ret;
  }

  public virtual string GetParticlesPath(uint arg0) {
    string ret = Engine2PINVOKE.IConfigFile_GetParticlesPath(swigCPtr, arg0);
    return ret;
  }

  public virtual int LoadConfigFromFile(string szFileName, SWIGTYPE_p_CParam arg1, int paramCount) {
    int ret = Engine2PINVOKE.IConfigFile_LoadConfigFromFile__SWIG_0(swigCPtr, szFileName, SWIGTYPE_p_CParam.getCPtr(arg1), paramCount);
    return ret;
  }

  public virtual int LoadConfigFromFile(string szFileName, SWIGTYPE_p_CParam arg1) {
    int ret = Engine2PINVOKE.IConfigFile_LoadConfigFromFile__SWIG_1(swigCPtr, szFileName, SWIGTYPE_p_CParam.getCPtr(arg1));
    return ret;
  }

  public virtual int LoadConfigFromFile(string szFileName) {
    int ret = Engine2PINVOKE.IConfigFile_LoadConfigFromFile__SWIG_2(swigCPtr, szFileName);
    return ret;
  }

  public virtual int LoadRenderConfig(string szProfile) {
    int ret = Engine2PINVOKE.IConfigFile_LoadRenderConfig(swigCPtr, szProfile);
    return ret;
  }

  public virtual void SaveConfig() {
    Engine2PINVOKE.IConfigFile_SaveConfig(swigCPtr);
  }

  public virtual CXmlElement GetConfigXML() {
    global::System.IntPtr cPtr = Engine2PINVOKE.IConfigFile_GetConfigXML(swigCPtr);
    CXmlElement ret = (cPtr == global::System.IntPtr.Zero) ? null : new CXmlElement(cPtr, false);
    return ret;
  }

}
