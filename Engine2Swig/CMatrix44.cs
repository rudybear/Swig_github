//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.7
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class CMatrix44 : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal CMatrix44(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(CMatrix44 obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~CMatrix44() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          Engine2PINVOKE.delete_CMatrix44(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public float _11 {
    set {
      Engine2PINVOKE.CMatrix44__11_set(swigCPtr, value);
    } 
    get {
      float ret = Engine2PINVOKE.CMatrix44__11_get(swigCPtr);
      return ret;
    } 
  }

  public float _12 {
    set {
      Engine2PINVOKE.CMatrix44__12_set(swigCPtr, value);
    } 
    get {
      float ret = Engine2PINVOKE.CMatrix44__12_get(swigCPtr);
      return ret;
    } 
  }

  public float _13 {
    set {
      Engine2PINVOKE.CMatrix44__13_set(swigCPtr, value);
    } 
    get {
      float ret = Engine2PINVOKE.CMatrix44__13_get(swigCPtr);
      return ret;
    } 
  }

  public float _14 {
    set {
      Engine2PINVOKE.CMatrix44__14_set(swigCPtr, value);
    } 
    get {
      float ret = Engine2PINVOKE.CMatrix44__14_get(swigCPtr);
      return ret;
    } 
  }

  public float _21 {
    set {
      Engine2PINVOKE.CMatrix44__21_set(swigCPtr, value);
    } 
    get {
      float ret = Engine2PINVOKE.CMatrix44__21_get(swigCPtr);
      return ret;
    } 
  }

  public float _22 {
    set {
      Engine2PINVOKE.CMatrix44__22_set(swigCPtr, value);
    } 
    get {
      float ret = Engine2PINVOKE.CMatrix44__22_get(swigCPtr);
      return ret;
    } 
  }

  public float _23 {
    set {
      Engine2PINVOKE.CMatrix44__23_set(swigCPtr, value);
    } 
    get {
      float ret = Engine2PINVOKE.CMatrix44__23_get(swigCPtr);
      return ret;
    } 
  }

  public float _24 {
    set {
      Engine2PINVOKE.CMatrix44__24_set(swigCPtr, value);
    } 
    get {
      float ret = Engine2PINVOKE.CMatrix44__24_get(swigCPtr);
      return ret;
    } 
  }

  public float _31 {
    set {
      Engine2PINVOKE.CMatrix44__31_set(swigCPtr, value);
    } 
    get {
      float ret = Engine2PINVOKE.CMatrix44__31_get(swigCPtr);
      return ret;
    } 
  }

  public float _32 {
    set {
      Engine2PINVOKE.CMatrix44__32_set(swigCPtr, value);
    } 
    get {
      float ret = Engine2PINVOKE.CMatrix44__32_get(swigCPtr);
      return ret;
    } 
  }

  public float _33 {
    set {
      Engine2PINVOKE.CMatrix44__33_set(swigCPtr, value);
    } 
    get {
      float ret = Engine2PINVOKE.CMatrix44__33_get(swigCPtr);
      return ret;
    } 
  }

  public float _34 {
    set {
      Engine2PINVOKE.CMatrix44__34_set(swigCPtr, value);
    } 
    get {
      float ret = Engine2PINVOKE.CMatrix44__34_get(swigCPtr);
      return ret;
    } 
  }

  public float _41 {
    set {
      Engine2PINVOKE.CMatrix44__41_set(swigCPtr, value);
    } 
    get {
      float ret = Engine2PINVOKE.CMatrix44__41_get(swigCPtr);
      return ret;
    } 
  }

  public float _42 {
    set {
      Engine2PINVOKE.CMatrix44__42_set(swigCPtr, value);
    } 
    get {
      float ret = Engine2PINVOKE.CMatrix44__42_get(swigCPtr);
      return ret;
    } 
  }

  public float _43 {
    set {
      Engine2PINVOKE.CMatrix44__43_set(swigCPtr, value);
    } 
    get {
      float ret = Engine2PINVOKE.CMatrix44__43_get(swigCPtr);
      return ret;
    } 
  }

  public float _44 {
    set {
      Engine2PINVOKE.CMatrix44__44_set(swigCPtr, value);
    } 
    get {
      float ret = Engine2PINVOKE.CMatrix44__44_get(swigCPtr);
      return ret;
    } 
  }

  public SWIGTYPE_p_a_4__float m {
    set {
      Engine2PINVOKE.CMatrix44_m_set(swigCPtr, SWIGTYPE_p_a_4__float.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = Engine2PINVOKE.CMatrix44_m_get(swigCPtr);
      SWIGTYPE_p_a_4__float ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_a_4__float(cPtr, false);
      return ret;
    } 
  }

  public CMatrix44() : this(Engine2PINVOKE.new_CMatrix44__SWIG_0(), true) {
  }

  public CMatrix44(int arg0) : this(Engine2PINVOKE.new_CMatrix44__SWIG_1(arg0), true) {
  }

  public CMatrix44(SWIGTYPE_p_float pData) : this(Engine2PINVOKE.new_CMatrix44__SWIG_2(SWIGTYPE_p_float.getCPtr(pData)), true) {
  }

  public CMatrix44(float __11, float __12, float __13, float __14, float __21, float __22, float __23, float __24, float __31, float __32, float __33, float __34, float __41, float __42, float __43, float __44) : this(Engine2PINVOKE.new_CMatrix44__SWIG_3(__11, __12, __13, __14, __21, __22, __23, __24, __31, __32, __33, __34, __41, __42, __43, __44), true) {
  }

  public CMatrix44(SWIGTYPE_p_CQuaternion Rotation) : this(Engine2PINVOKE.new_CMatrix44__SWIG_4(SWIGTYPE_p_CQuaternion.getCPtr(Rotation)), true) {
    if (Engine2PINVOKE.SWIGPendingException.Pending) throw Engine2PINVOKE.SWIGPendingException.Retrieve();
  }

  public bool not_equal(CMatrix44 mx) {
    bool ret = Engine2PINVOKE.CMatrix44_not_equal(swigCPtr, CMatrix44.getCPtr(mx));
    if (Engine2PINVOKE.SWIGPendingException.Pending) throw Engine2PINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public CMatrix44 assign(CMatrix44 mx) {
    CMatrix44 ret = new CMatrix44(Engine2PINVOKE.CMatrix44_assign(swigCPtr, CMatrix44.getCPtr(mx)), false);
    if (Engine2PINVOKE.SWIGPendingException.Pending) throw Engine2PINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public CMatrix44 mul(CMatrix44 mat) {
    CMatrix44 ret = new CMatrix44(Engine2PINVOKE.CMatrix44_mul__SWIG_0(swigCPtr, CMatrix44.getCPtr(mat)), true);
    if (Engine2PINVOKE.SWIGPendingException.Pending) throw Engine2PINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public CVec3 mul(CVec3 vec) {
    CVec3 ret = new CVec3(Engine2PINVOKE.CMatrix44_mul__SWIG_1(swigCPtr, CVec3.getCPtr(vec)), true);
    if (Engine2PINVOKE.SWIGPendingException.Pending) throw Engine2PINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public float get_val(uint n) {
    float ret = Engine2PINVOKE.CMatrix44_get_val__SWIG_0(swigCPtr, n);
    return ret;
  }

  public SWIGTYPE_p_float GetElement(uint n) {
    SWIGTYPE_p_float ret = new SWIGTYPE_p_float(Engine2PINVOKE.CMatrix44_GetElement(swigCPtr, n), false);
    return ret;
  }

  public float get_val_row_col(uint row, uint col) {
    float ret = Engine2PINVOKE.CMatrix44_get_val_row_col__SWIG_0(swigCPtr, row, col);
    return ret;
  }

  public CVec4 Vec4() {
    global::System.IntPtr cPtr = Engine2PINVOKE.CMatrix44_Vec4(swigCPtr);
    CVec4 ret = (cPtr == global::System.IntPtr.Zero) ? null : new CVec4(cPtr, false);
    return ret;
  }

  public CVec4 Row(uint n) {
    CVec4 ret = new CVec4(Engine2PINVOKE.CMatrix44_Row(swigCPtr, n), false);
    return ret;
  }

  public CVec3 Row3(uint n) {
    CVec3 ret = new CVec3(Engine2PINVOKE.CMatrix44_Row3(swigCPtr, n), false);
    return ret;
  }

  public CVec3 Col3(uint n) {
    CVec3 ret = new CVec3(Engine2PINVOKE.CMatrix44_Col3(swigCPtr, n), true);
    return ret;
  }

  public void FromDirection(CVec3 vecDir) {
    Engine2PINVOKE.CMatrix44_FromDirection(swigCPtr, CVec3.getCPtr(vecDir));
    if (Engine2PINVOKE.SWIGPendingException.Pending) throw Engine2PINVOKE.SWIGPendingException.Retrieve();
  }

  public void FromPosRot(CVec3 vecPos, SWIGTYPE_p_CQuaternion qRot) {
    Engine2PINVOKE.CMatrix44_FromPosRot__SWIG_0(swigCPtr, CVec3.getCPtr(vecPos), SWIGTYPE_p_CQuaternion.getCPtr(qRot));
    if (Engine2PINVOKE.SWIGPendingException.Pending) throw Engine2PINVOKE.SWIGPendingException.Retrieve();
  }

  public void FromPosRotScale(CVec3 vecPos, SWIGTYPE_p_CQuaternion qRot, CVec3 vecScale) {
    Engine2PINVOKE.CMatrix44_FromPosRotScale__SWIG_0(swigCPtr, CVec3.getCPtr(vecPos), SWIGTYPE_p_CQuaternion.getCPtr(qRot), CVec3.getCPtr(vecScale));
    if (Engine2PINVOKE.SWIGPendingException.Pending) throw Engine2PINVOKE.SWIGPendingException.Retrieve();
  }

  public void FromYPR(float fYaw, float fPitch, float fRoll) {
    Engine2PINVOKE.CMatrix44_FromYPR(swigCPtr, fYaw, fPitch, fRoll);
  }

  public void FromPosRot(CVec3 vecPos, CMatrix44 matRot) {
    Engine2PINVOKE.CMatrix44_FromPosRot__SWIG_1(swigCPtr, CVec3.getCPtr(vecPos), CMatrix44.getCPtr(matRot));
    if (Engine2PINVOKE.SWIGPendingException.Pending) throw Engine2PINVOKE.SWIGPendingException.Retrieve();
  }

  public void FromPosRotScale(CVec3 vecPos, CMatrix44 matRot, CVec3 vecScale) {
    Engine2PINVOKE.CMatrix44_FromPosRotScale__SWIG_1(swigCPtr, CVec3.getCPtr(vecPos), CMatrix44.getCPtr(matRot), CVec3.getCPtr(vecScale));
    if (Engine2PINVOKE.SWIGPendingException.Pending) throw Engine2PINVOKE.SWIGPendingException.Retrieve();
  }

  public CMatrix44 GetInvert() {
    CMatrix44 ret = new CMatrix44(Engine2PINVOKE.CMatrix44_GetInvert(swigCPtr), true);
    return ret;
  }

  public SWIGTYPE_p_CQuaternion GetRotQuaternion() {
    SWIGTYPE_p_CQuaternion ret = new SWIGTYPE_p_CQuaternion(Engine2PINVOKE.CMatrix44_GetRotQuaternion(swigCPtr), true);
    return ret;
  }

  public CVec3 GetScale() {
    CVec3 ret = new CVec3(Engine2PINVOKE.CMatrix44_GetScale(swigCPtr), true);
    return ret;
  }

  public float GetUniformScale(uint row) {
    float ret = Engine2PINVOKE.CMatrix44_GetUniformScale__SWIG_0(swigCPtr, row);
    return ret;
  }

  public float GetUniformScale() {
    float ret = Engine2PINVOKE.CMatrix44_GetUniformScale__SWIG_1(swigCPtr);
    return ret;
  }

  public CMatrix44 Transpose() {
    CMatrix44 ret = new CMatrix44(Engine2PINVOKE.CMatrix44_Transpose(swigCPtr), false);
    return ret;
  }

  public CMatrix44 GetTransposed() {
    CMatrix44 ret = new CMatrix44(Engine2PINVOKE.CMatrix44_GetTransposed(swigCPtr), true);
    return ret;
  }

  public void SetTranslation(CVec3 vecPos) {
    Engine2PINVOKE.CMatrix44_SetTranslation(swigCPtr, CVec3.getCPtr(vecPos));
    if (Engine2PINVOKE.SWIGPendingException.Pending) throw Engine2PINVOKE.SWIGPendingException.Retrieve();
  }

  public CVec3 GetTranslation() {
    CVec3 ret = new CVec3(Engine2PINVOKE.CMatrix44_GetTranslation(swigCPtr), false);
    return ret;
  }

  public CMatrix44 GetRotation(bool bNormalize) {
    CMatrix44 ret = new CMatrix44(Engine2PINVOKE.CMatrix44_GetRotation__SWIG_0(swigCPtr, bNormalize), true);
    return ret;
  }

  public CMatrix44 GetRotation() {
    CMatrix44 ret = new CMatrix44(Engine2PINVOKE.CMatrix44_GetRotation__SWIG_1(swigCPtr), true);
    return ret;
  }

  public CMatrix44 Identity() {
    CMatrix44 ret = new CMatrix44(Engine2PINVOKE.CMatrix44_Identity(swigCPtr), false);
    return ret;
  }

  public static CMatrix44 Slerp(CMatrix44 q1, CMatrix44 q2, float t) {
    CMatrix44 ret = new CMatrix44(Engine2PINVOKE.CMatrix44_Slerp(CMatrix44.getCPtr(q1), CMatrix44.getCPtr(q2), t), true);
    if (Engine2PINVOKE.SWIGPendingException.Pending) throw Engine2PINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static CMatrix44 FromQuaternion(SWIGTYPE_p_CQuaternion q) {
    CMatrix44 ret = new CMatrix44(Engine2PINVOKE.CMatrix44_FromQuaternion(SWIGTYPE_p_CQuaternion.getCPtr(q)), true);
    if (Engine2PINVOKE.SWIGPendingException.Pending) throw Engine2PINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void SetUniformScale(float s) {
    Engine2PINVOKE.CMatrix44_SetUniformScale(swigCPtr, s);
  }

  public void SetScale(CVec3 v) {
    Engine2PINVOKE.CMatrix44_SetScale(swigCPtr, CVec3.getCPtr(v));
    if (Engine2PINVOKE.SWIGPendingException.Pending) throw Engine2PINVOKE.SWIGPendingException.Retrieve();
  }

  public void Validate() {
    Engine2PINVOKE.CMatrix44_Validate(swigCPtr);
  }

}
