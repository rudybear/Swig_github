//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.7
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class IMaterialInfo : IMeshInfo {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal IMaterialInfo(global::System.IntPtr cPtr, bool cMemoryOwn) : base(Engine2PINVOKE.IMaterialInfo_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(IMaterialInfo obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~IMaterialInfo() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          Engine2PINVOKE.delete_IMaterialInfo(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public virtual SWIGTYPE_p_uint32 GetVisibleMaterialsCount() {
    SWIGTYPE_p_uint32 ret = new SWIGTYPE_p_uint32(Engine2PINVOKE.IMaterialInfo_GetVisibleMaterialsCount(swigCPtr), true);
    return ret;
  }

  public virtual string GetVisibleMaterialName(SWIGTYPE_p_uint32 arg0) {
    string ret = Engine2PINVOKE.IMaterialInfo_GetVisibleMaterialName(swigCPtr, SWIGTYPE_p_uint32.getCPtr(arg0));
    if (Engine2PINVOKE.SWIGPendingException.Pending) throw Engine2PINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual SWIGTYPE_p_IMaterial GetVisibleMaterial(SWIGTYPE_p_uint32 num) {
    global::System.IntPtr cPtr = Engine2PINVOKE.IMaterialInfo_GetVisibleMaterial(swigCPtr, SWIGTYPE_p_uint32.getCPtr(num));
    SWIGTYPE_p_IMaterial ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_IMaterial(cPtr, false);
    if (Engine2PINVOKE.SWIGPendingException.Pending) throw Engine2PINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual bool SetVisibleMaterial(SWIGTYPE_p_uint32 num, SWIGTYPE_p_IMaterial arg1) {
    bool ret = Engine2PINVOKE.IMaterialInfo_SetVisibleMaterial(swigCPtr, SWIGTYPE_p_uint32.getCPtr(num), SWIGTYPE_p_IMaterial.getCPtr(arg1));
    if (Engine2PINVOKE.SWIGPendingException.Pending) throw Engine2PINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual bool SetVisibleMaterialByMaterialName(SWIGTYPE_p_uint32 mat, string newMat) {
    bool ret = Engine2PINVOKE.IMaterialInfo_SetVisibleMaterialByMaterialName(swigCPtr, SWIGTYPE_p_uint32.getCPtr(mat), newMat);
    if (Engine2PINVOKE.SWIGPendingException.Pending) throw Engine2PINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual SWIGTYPE_p_uint32 GetVisibleMaterialParamCount(SWIGTYPE_p_uint32 mat) {
    SWIGTYPE_p_uint32 ret = new SWIGTYPE_p_uint32(Engine2PINVOKE.IMaterialInfo_GetVisibleMaterialParamCount(swigCPtr, SWIGTYPE_p_uint32.getCPtr(mat)), true);
    if (Engine2PINVOKE.SWIGPendingException.Pending) throw Engine2PINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual SWIGTYPE_p_CParam GetVisibleMaterialParam(SWIGTYPE_p_uint32 mat, SWIGTYPE_p_uint32 param) {
    global::System.IntPtr cPtr = Engine2PINVOKE.IMaterialInfo_GetVisibleMaterialParam(swigCPtr, SWIGTYPE_p_uint32.getCPtr(mat), SWIGTYPE_p_uint32.getCPtr(param));
    SWIGTYPE_p_CParam ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_CParam(cPtr, false);
    if (Engine2PINVOKE.SWIGPendingException.Pending) throw Engine2PINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual bool AddVisibleMaterialParam(SWIGTYPE_p_uint32 mat, SWIGTYPE_p_CParam param) {
    bool ret = Engine2PINVOKE.IMaterialInfo_AddVisibleMaterialParam(swigCPtr, SWIGTYPE_p_uint32.getCPtr(mat), SWIGTYPE_p_CParam.getCPtr(param));
    if (Engine2PINVOKE.SWIGPendingException.Pending) throw Engine2PINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual bool AddVisibleMaterialParamPtr(SWIGTYPE_p_uint32 mat, SWIGTYPE_p_CParam param) {
    bool ret = Engine2PINVOKE.IMaterialInfo_AddVisibleMaterialParamPtr(swigCPtr, SWIGTYPE_p_uint32.getCPtr(mat), SWIGTYPE_p_CParam.getCPtr(param));
    if (Engine2PINVOKE.SWIGPendingException.Pending) throw Engine2PINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}
